{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\component-loader\\component-loader.factory.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\component-loader\\component-loader.factory.js","mtime":1614055083319},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, NgZone } from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/index';\nvar ComponentLoaderFactory = /*@__PURE__*/ (function () {\n    function ComponentLoaderFactory(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._ngZone = _ngZone;\n        this._injector = _injector;\n        this._posService = _posService;\n        this._applicationRef = _applicationRef;\n    }\n    /**\n     *\n     * @param _elementRef\n     * @param _viewContainerRef\n     * @param _renderer\n     * @returns {ComponentLoader}\n     */\n    ComponentLoaderFactory.prototype.createLoader = function (_elementRef, _viewContainerRef, _renderer) {\n        return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n    };\n    return ComponentLoaderFactory;\n}());\nexport { ComponentLoaderFactory };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\component-loader\\component-loader.factory.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\component-loader\\component-loader.factory.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,wBAAwB,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvG,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAC1D,IAAI,sBAAsB,iBAAG,CAAC;IAC1B,gCAAgC,yBAAyB,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,eAAe;QACvG,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC3D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IACD;;;;;;OAMG;IACH,sBAAsB,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,WAAW,EAAE,iBAAiB,EAAE,SAAS;QAC/F,MAAM,CAAC,IAAI,eAAe,CAAC,iBAAiB,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAChL,CAAC,CAAC;IAYF,MAAM,CAAC,sBAAsB,CAAC;GAC/B,CAAC,CAAC;AACL,OAAO,EAAE,sBAAsB,EAAE,CAAC;AAClC,oDAAoD","sourcesContent":["import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, NgZone } from '@angular/core';\nimport { ComponentLoader } from './component-loader.class';\nimport { PositioningService } from '../positioning/index';\nvar ComponentLoaderFactory = (function () {\n    function ComponentLoaderFactory(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._ngZone = _ngZone;\n        this._injector = _injector;\n        this._posService = _posService;\n        this._applicationRef = _applicationRef;\n    }\n    /**\n     *\n     * @param _elementRef\n     * @param _viewContainerRef\n     * @param _renderer\n     * @returns {ComponentLoader}\n     */\n    ComponentLoaderFactory.prototype.createLoader = function (_elementRef, _viewContainerRef, _renderer) {\n        return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n    };\n    ComponentLoaderFactory.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ComponentLoaderFactory.ctorParameters = function () { return [\n        { type: ComponentFactoryResolver, },\n        { type: NgZone, },\n        { type: Injector, },\n        { type: PositioningService, },\n        { type: ApplicationRef, },\n    ]; };\n    return ComponentLoaderFactory;\n}());\nexport { ComponentLoaderFactory };\n//# sourceMappingURL=component-loader.factory.js.map"]}]}