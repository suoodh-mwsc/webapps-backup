{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\adal-angular5\\adal5-http.service.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\adal-angular5\\adal5-http.service.js","mtime":1517209170000},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Rx_1 = require(\"rxjs/Rx\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\n/**\n *\n *\n * @export\n * @class Adal5HTTPService\n */\nvar Adal5HTTPService = /*@__PURE__*/ (function () {\n    /**\n     * Creates an instance of Adal5HTTPService.\n     * @param {HttpClient} http\n     * @param {Adal5Service} service\n     *\n     * @memberOf Adal5HTTPService\n     */\n    function Adal5HTTPService(http, service) {\n        this.http = http;\n        this.service = service;\n    }\n    Adal5HTTPService_1 = Adal5HTTPService;\n    /**\n     *\n     *\n     * @static\n     * @param {HttpClient} http\n     * @param {Adal5Service} service\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.factory = function (http, service) {\n        return new Adal5HTTPService_1(http, service);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.get = function (url, options) {\n        return this.sendRequest('get', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} body\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.post = function (url, body, options) {\n        options.body = body;\n        return this.sendRequest('post', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.delete = function (url, options) {\n        return this.sendRequest('delete', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} body\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.patch = function (url, body, options) {\n        options.body = body;\n        return this.sendRequest('patch', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} body\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.put = function (url, body, options) {\n        options.body = body;\n        return this.sendRequest('put', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.head = function (url, options) {\n        return this.sendRequest('head', url, options);\n    };\n    /**\n     *\n     *\n     * @private\n     * @param {string} method\n     * @param {string} url\n     * @param {RequestOptionsArgs} options\n     * @returns {Observable<string>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.sendRequest = function (method, url, options) {\n        var _this = this;\n        var resource = this.service.GetResourceForEndpoint(url);\n        var authenticatedCall;\n        if (resource) {\n            if (this.service.userInfo.authenticated) {\n                authenticatedCall = this.service.acquireToken(resource)\n                    .flatMap(function (token) {\n                    if (options.headers == null) {\n                        options.headers = new http_1.HttpHeaders();\n                    }\n                    options.headers = options.headers.append('Authorization', 'Bearer ' + token);\n                    return _this.http.request(method, url, options)\n                        .catch(_this.handleError);\n                });\n            }\n            else {\n                authenticatedCall = Rx_1.Observable.throw(new Error('User Not Authenticated.'));\n            }\n        }\n        else {\n            authenticatedCall = this.http.request(method, url, options).catch(this.handleError);\n        }\n        return authenticatedCall;\n    };\n    /**\n     *\n     *\n     * @private\n     * @param {*} error\n     * @returns\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.handleError = function (error) {\n        // In a real world app, we might send the error to remote logging infrastructure\n        var errMsg = error.message || 'Server error';\n        console.error(JSON.stringify(error)); // log to console instead\n        return Rx_1.Observable.throw(error);\n    };\n    Adal5HTTPService = Adal5HTTPService_1 = __decorate([\n        core_1.Injectable()\n    ], Adal5HTTPService);\n    return Adal5HTTPService;\n    var Adal5HTTPService_1;\n}());\nexports.Adal5HTTPService = Adal5HTTPService;\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\adal-angular5\\adal5-http.service.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\adal-angular5\\adal5-http.service.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Rx_1 = require(\"rxjs/Rx\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\n/**\n *\n *\n * @export\n * @class Adal5HTTPService\n */\nvar Adal5HTTPService = (function () {\n    /**\n     * Creates an instance of Adal5HTTPService.\n     * @param {HttpClient} http\n     * @param {Adal5Service} service\n     *\n     * @memberOf Adal5HTTPService\n     */\n    function Adal5HTTPService(http, service) {\n        this.http = http;\n        this.service = service;\n    }\n    Adal5HTTPService_1 = Adal5HTTPService;\n    /**\n     *\n     *\n     * @static\n     * @param {HttpClient} http\n     * @param {Adal5Service} service\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.factory = function (http, service) {\n        return new Adal5HTTPService_1(http, service);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.get = function (url, options) {\n        return this.sendRequest('get', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} body\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.post = function (url, body, options) {\n        options.body = body;\n        return this.sendRequest('post', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.delete = function (url, options) {\n        return this.sendRequest('delete', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} body\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.patch = function (url, body, options) {\n        options.body = body;\n        return this.sendRequest('patch', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} body\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.put = function (url, body, options) {\n        options.body = body;\n        return this.sendRequest('put', url, options);\n    };\n    /**\n     *\n     *\n     * @param {string} url\n     * @param {*} [options]\n     * @returns {Observable<any>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.head = function (url, options) {\n        return this.sendRequest('head', url, options);\n    };\n    /**\n     *\n     *\n     * @private\n     * @param {string} method\n     * @param {string} url\n     * @param {RequestOptionsArgs} options\n     * @returns {Observable<string>}\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.sendRequest = function (method, url, options) {\n        var _this = this;\n        var resource = this.service.GetResourceForEndpoint(url);\n        var authenticatedCall;\n        if (resource) {\n            if (this.service.userInfo.authenticated) {\n                authenticatedCall = this.service.acquireToken(resource)\n                    .flatMap(function (token) {\n                    if (options.headers == null) {\n                        options.headers = new http_1.HttpHeaders();\n                    }\n                    options.headers = options.headers.append('Authorization', 'Bearer ' + token);\n                    return _this.http.request(method, url, options)\n                        .catch(_this.handleError);\n                });\n            }\n            else {\n                authenticatedCall = Rx_1.Observable.throw(new Error('User Not Authenticated.'));\n            }\n        }\n        else {\n            authenticatedCall = this.http.request(method, url, options).catch(this.handleError);\n        }\n        return authenticatedCall;\n    };\n    /**\n     *\n     *\n     * @private\n     * @param {*} error\n     * @returns\n     *\n     * @memberOf Adal5HTTPService\n     */\n    Adal5HTTPService.prototype.handleError = function (error) {\n        // In a real world app, we might send the error to remote logging infrastructure\n        var errMsg = error.message || 'Server error';\n        console.error(JSON.stringify(error)); // log to console instead\n        return Rx_1.Observable.throw(error);\n    };\n    Adal5HTTPService = Adal5HTTPService_1 = __decorate([\n        core_1.Injectable()\n    ], Adal5HTTPService);\n    return Adal5HTTPService;\n    var Adal5HTTPService_1;\n}());\nexports.Adal5HTTPService = Adal5HTTPService;\n"]}]}