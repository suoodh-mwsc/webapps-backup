{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\ng-transclude.directive.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\ng-transclude.directive.js","mtime":1614055097851},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Directive, Input, ViewContainerRef } from '@angular/core';\nvar NgTranscludeDirective = /*@__PURE__*/ (function () {\n    function NgTranscludeDirective(viewRef) {\n        this.viewRef = viewRef;\n    }\n    Object.defineProperty(NgTranscludeDirective.prototype, \"ngTransclude\", {\n        get: function () {\n            return this._ngTransclude;\n        },\n        set: function (templateRef) {\n            this._ngTransclude = templateRef;\n            if (templateRef) {\n                this.viewRef.createEmbeddedView(templateRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NgTranscludeDirective;\n}());\nexport { NgTranscludeDirective };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\ng-transclude.directive.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\ng-transclude.directive.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AACnE,IAAI,qBAAqB,iBAAG,CAAC;IACzB,+BAA+B,OAAO;QAClC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,qBAAqB,CAAC,SAAS,EAAE,cAAc,EAAE;QACnE,GAAG,EAAE;YACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;QACD,GAAG,EAAE,UAAU,WAAW;YACtB,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;YACjC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;YACjD,CAAC;QACL,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;IAaH,MAAM,CAAC,qBAAqB,CAAC;GAC9B,CAAC,CAAC;AACL,OAAO,EAAE,qBAAqB,EAAE,CAAC;AACjC,mDAAmD","sourcesContent":["import { Directive, Input, ViewContainerRef } from '@angular/core';\nvar NgTranscludeDirective = (function () {\n    function NgTranscludeDirective(viewRef) {\n        this.viewRef = viewRef;\n    }\n    Object.defineProperty(NgTranscludeDirective.prototype, \"ngTransclude\", {\n        get: function () {\n            return this._ngTransclude;\n        },\n        set: function (templateRef) {\n            this._ngTransclude = templateRef;\n            if (templateRef) {\n                this.viewRef.createEmbeddedView(templateRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTranscludeDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngTransclude]'\n                },] },\n    ];\n    /** @nocollapse */\n    NgTranscludeDirective.ctorParameters = function () { return [\n        { type: ViewContainerRef, },\n    ]; };\n    NgTranscludeDirective.propDecorators = {\n        'ngTransclude': [{ type: Input },],\n    };\n    return NgTranscludeDirective;\n}());\nexport { NgTranscludeDirective };\n//# sourceMappingURL=ng-transclude.directive.js.map"]}]}