{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\angular-draggable-droppable\\esm5\\angular-draggable-droppable.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\angular-draggable-droppable\\esm5\\angular-draggable-droppable.js","mtime":1514308809000},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output, Renderer2 } from '@angular/core';\nimport { Subject as Subject$1 } from 'rxjs/Subject';\nimport { merge as merge$1 } from 'rxjs/observable/merge';\nimport { map as map$1 } from 'rxjs/operators/map';\nimport { mergeMap as mergeMap$1 } from 'rxjs/operators/mergeMap';\nimport { takeUntil as takeUntil$1 } from 'rxjs/operators/takeUntil';\nimport { take as take$1 } from 'rxjs/operators/take';\nimport { takeLast as takeLast$1 } from 'rxjs/operators/takeLast';\nimport { pairwise as pairwise$1 } from 'rxjs/operators/pairwise';\nimport { share as share$1 } from 'rxjs/operators/share';\nimport { filter as filter$1 } from 'rxjs/operators/filter';\nimport { distinctUntilChanged as distinctUntilChanged$1 } from 'rxjs/operators/distinctUntilChanged';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DraggableHelper = /*@__PURE__*/ (function () {\n    function DraggableHelper() {\n        this.currentDrag = new Subject$1();\n    }\n    return DraggableHelper;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @record\n */\nvar MOVE_CURSOR = 'move';\nvar DraggableDirective = /*@__PURE__*/ (function () {\n    /**\n     * @hidden\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} draggableHelper\n     * @param {?} zone\n     */\n    function DraggableDirective(element, renderer, draggableHelper, zone) {\n        this.element = element;\n        this.renderer = renderer;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        /**\n         * The axis along which the element is draggable\n         */\n        this.dragAxis = { x: true, y: true };\n        /**\n         * Snap all drags to an x / y grid\n         */\n        this.dragSnapGrid = {};\n        /**\n         * Show a ghost element that shows the drag when dragging\n         */\n        this.ghostDragEnabled = true;\n        /**\n         * The cursor to use when dragging the element\n         */\n        this.dragCursor = MOVE_CURSOR;\n        /**\n         * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n         */\n        this.dragPointerDown = new EventEmitter();\n        /**\n         * Called when the element has started to be dragged.\n         * Only called after at least one mouse or touch move event\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * Called when the element is being dragged\n         */\n        this.dragging = new EventEmitter();\n        /**\n         * Called after the element is dragged\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.pointerDown = new Subject$1();\n        /**\n         * @hidden\n         */\n        this.pointerMove = new Subject$1();\n        /**\n         * @hidden\n         */\n        this.pointerUp = new Subject$1();\n        this.eventListenerSubscriptions = {};\n    }\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.checkEventListeners();\n        var /** @type {?} */ pointerDrag = this.pointerDown\n            .pipe(filter$1(function () { return _this.canDrag(); }))\n            .pipe(mergeMap$1(function (pointerDownEvent) {\n            var /** @type {?} */ currentDrag = new Subject$1();\n            _this.zone.run(function () {\n                _this.dragPointerDown.next({ x: 0, y: 0 });\n            });\n            var /** @type {?} */ pointerMove = _this.pointerMove\n                .pipe(map$1(function (pointerMoveEvent) {\n                pointerMoveEvent.event.preventDefault();\n                return {\n                    currentDrag: currentDrag,\n                    x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                    y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                    clientX: pointerMoveEvent.clientX,\n                    clientY: pointerMoveEvent.clientY\n                };\n            }))\n                .pipe(map$1(function (moveData) {\n                if (_this.dragSnapGrid.x) {\n                    moveData.x =\n                        Math.floor(moveData.x / _this.dragSnapGrid.x) *\n                            _this.dragSnapGrid.x;\n                }\n                if (_this.dragSnapGrid.y) {\n                    moveData.y =\n                        Math.floor(moveData.y / _this.dragSnapGrid.y) *\n                            _this.dragSnapGrid.y;\n                }\n                return moveData;\n            }))\n                .pipe(map$1(function (moveData) {\n                if (!_this.dragAxis.x) {\n                    moveData.x = 0;\n                }\n                if (!_this.dragAxis.y) {\n                    moveData.y = 0;\n                }\n                return moveData;\n            }))\n                .pipe(filter$1(function (_a) {\n                var x = _a.x, y = _a.y;\n                return !_this.validateDrag || _this.validateDrag({ x: x, y: y });\n            }))\n                .pipe(takeUntil$1(merge$1(_this.pointerUp, _this.pointerDown)))\n                .pipe(share$1());\n            pointerMove.pipe(take$1(1)).subscribe(function () {\n                pointerDownEvent.event.preventDefault();\n                _this.zone.run(function () {\n                    _this.dragStart.next({ x: 0, y: 0 });\n                });\n                _this.setCursor(_this.dragCursor);\n                _this.draggableHelper.currentDrag.next(currentDrag);\n            });\n            pointerMove.pipe(takeLast$1(1)).subscribe(function (_a) {\n                var x = _a.x, y = _a.y;\n                _this.zone.run(function () {\n                    _this.dragEnd.next({ x: x, y: y });\n                });\n                currentDrag.complete();\n                _this.setCssTransform(null);\n                if (_this.ghostDragEnabled) {\n                    _this.renderer.setStyle(_this.element.nativeElement, 'pointerEvents', null);\n                }\n            });\n            return pointerMove;\n        }))\n            .pipe(share$1());\n        merge$1(pointerDrag.pipe(take$1(1)).pipe(map$1(function (value) { return [, value]; })), pointerDrag.pipe(pairwise$1()))\n            .pipe(filter$1(function (_a) {\n            var previous = _a[0], next = _a[1];\n            if (!previous) {\n                return true;\n            }\n            return previous.x !== next.x || previous.y !== next.y;\n        }))\n            .pipe(map$1(function (_a) {\n            var previous = _a[0], next = _a[1];\n            return next;\n        }))\n            .subscribe(function (_a) {\n            var x = _a.x, y = _a.y, currentDrag = _a.currentDrag, clientX = _a.clientX, clientY = _a.clientY;\n            _this.zone.run(function () {\n                _this.dragging.next({ x: x, y: y });\n            });\n            if (_this.ghostDragEnabled) {\n                _this.renderer.setStyle(_this.element.nativeElement, 'pointerEvents', 'none');\n            }\n            _this.setCssTransform(\"translate(\" + x + \"px, \" + y + \"px)\");\n            currentDrag.next({\n                clientX: clientX,\n                clientY: clientY,\n                dropData: _this.dropData\n            });\n        });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnChanges = function (changes) {\n        if (changes['dragAxis']) {\n            this.checkEventListeners();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnDestroy = function () {\n        this.unsubscribeEventListeners();\n        this.pointerDown.complete();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.checkEventListeners = function () {\n        var _this = this;\n        var /** @type {?} */ canDrag = this.canDrag();\n        var /** @type {?} */ hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;\n        if (canDrag && !hasEventListeners) {\n            this.zone.runOutsideAngular(function () {\n                _this.eventListenerSubscriptions.mousedown = _this.renderer.listen(_this.element.nativeElement, 'mousedown', function (event) {\n                    _this.onMouseDown(event);\n                });\n                _this.eventListenerSubscriptions.mouseup = _this.renderer.listen('document', 'mouseup', function (event) {\n                    _this.onMouseUp(event);\n                });\n                _this.eventListenerSubscriptions.touchstart = _this.renderer.listen(_this.element.nativeElement, 'touchstart', function (event) {\n                    _this.onTouchStart(event);\n                });\n                _this.eventListenerSubscriptions.touchend = _this.renderer.listen('document', 'touchend', function (event) {\n                    _this.onTouchEnd(event);\n                });\n                _this.eventListenerSubscriptions.touchcancel = _this.renderer.listen('document', 'touchcancel', function (event) {\n                    _this.onTouchEnd(event);\n                });\n                _this.eventListenerSubscriptions.mouseenter = _this.renderer.listen(_this.element.nativeElement, 'mouseenter', function () {\n                    _this.onMouseEnter();\n                });\n                _this.eventListenerSubscriptions.mouseleave = _this.renderer.listen(_this.element.nativeElement, 'mouseleave', function () {\n                    _this.onMouseLeave();\n                });\n            });\n        }\n        else if (!canDrag && hasEventListeners) {\n            this.unsubscribeEventListeners();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseDown = function (event) {\n        var _this = this;\n        if (!this.eventListenerSubscriptions.mousemove) {\n            this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove', function (mouseMoveEvent) {\n                _this.pointerMove.next({\n                    event: mouseMoveEvent,\n                    clientX: mouseMoveEvent.clientX,\n                    clientY: mouseMoveEvent.clientY\n                });\n            });\n        }\n        this.pointerDown.next({\n            event: event,\n            clientX: event.clientX,\n            clientY: event.clientY\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseUp = function (event) {\n        if (this.eventListenerSubscriptions.mousemove) {\n            this.eventListenerSubscriptions.mousemove();\n            delete this.eventListenerSubscriptions.mousemove;\n        }\n        this.pointerUp.next({\n            event: event,\n            clientX: event.clientX,\n            clientY: event.clientY\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onTouchStart = function (event) {\n        var _this = this;\n        if (!this.eventListenerSubscriptions.touchmove) {\n            this.eventListenerSubscriptions.touchmove = this.renderer.listen('document', 'touchmove', function (touchMoveEvent) {\n                _this.pointerMove.next({\n                    event: touchMoveEvent,\n                    clientX: touchMoveEvent.targetTouches[0].clientX,\n                    clientY: touchMoveEvent.targetTouches[0].clientY\n                });\n            });\n        }\n        this.pointerDown.next({\n            event: event,\n            clientX: event.touches[0].clientX,\n            clientY: event.touches[0].clientY\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onTouchEnd = function (event) {\n        if (this.eventListenerSubscriptions.touchmove) {\n            this.eventListenerSubscriptions.touchmove();\n            delete this.eventListenerSubscriptions.touchmove;\n        }\n        this.pointerUp.next({\n            event: event,\n            clientX: event.changedTouches[0].clientX,\n            clientY: event.changedTouches[0].clientY\n        });\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseEnter = function () {\n        this.setCursor(this.dragCursor);\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseLeave = function () {\n        this.setCursor(null);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DraggableDirective.prototype.setCssTransform = function (value) {\n        var _this = this;\n        if (this.ghostDragEnabled) {\n            var /** @type {?} */ transformAttributes = [\n                'transform',\n                '-webkit-transform',\n                '-ms-transform',\n                '-moz-transform',\n                '-o-transform'\n            ];\n            transformAttributes.forEach(function (transformAttribute) {\n                _this.renderer.setStyle(_this.element.nativeElement, transformAttribute, value);\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.canDrag = function () {\n        return this.dragAxis.x || this.dragAxis.y;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DraggableDirective.prototype.setCursor = function (value) {\n        this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.unsubscribeEventListeners = function () {\n        var _this = this;\n        Object.keys(this.eventListenerSubscriptions).forEach(function (type) {\n            ((_this)).eventListenerSubscriptions[type]();\n            delete ((_this)).eventListenerSubscriptions[type];\n        });\n    };\n    return DraggableDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} clientX\n * @param {?} clientY\n * @param {?} rect\n * @return {?}\n */\nfunction isCoordinateWithinRectangle(clientX, clientY, rect) {\n    return (clientX >= rect.left &&\n        clientX <= rect.right &&\n        clientY >= rect.top &&\n        clientY <= rect.bottom);\n}\n/**\n * @record\n */\nvar DroppableDirective = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} element\n     * @param {?} draggableHelper\n     * @param {?} zone\n     */\n    function DroppableDirective(element, draggableHelper, zone) {\n        this.element = element;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        /**\n         * Called when a draggable element starts overlapping the element\n         */\n        this.dragEnter = new EventEmitter();\n        /**\n         * Called when a draggable element stops overlapping the element\n         */\n        this.dragLeave = new EventEmitter();\n        /**\n         * Called when a draggable element is moved over the element\n         */\n        this.dragOver = new EventEmitter();\n        /**\n         * Called when a draggable element is dropped on this element\n         */\n        this.drop = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    DroppableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        /**\n         * @record\n         */\n        this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(function (drag) {\n            var /** @type {?} */ droppableRectangle = _this.element.nativeElement.getBoundingClientRect();\n            var /** @type {?} */ currentDragDropData;\n            var /** @type {?} */ overlaps = drag.pipe(map$1(function (_a) {\n                var clientX = _a.clientX, clientY = _a.clientY, dropData = _a.dropData;\n                currentDragDropData = dropData;\n                return isCoordinateWithinRectangle(clientX, clientY, droppableRectangle);\n            }));\n            var /** @type {?} */ overlapsChanged = overlaps.pipe(distinctUntilChanged$1());\n            var /** @type {?} */ dragOverActive; // TODO - see if there's a way of doing this via rxjs\n            overlapsChanged\n                .pipe(filter$1(function (overlapsNow) { return overlapsNow; }))\n                .subscribe(function () {\n                dragOverActive = true;\n                _this.zone.run(function () {\n                    _this.dragEnter.next({\n                        dropData: currentDragDropData\n                    });\n                });\n            });\n            overlaps.pipe(filter$1(function (overlapsNow) { return overlapsNow; })).subscribe(function () {\n                _this.zone.run(function () {\n                    _this.dragOver.next({\n                        dropData: currentDragDropData\n                    });\n                });\n            });\n            overlapsChanged\n                .pipe(pairwise$1())\n                .pipe(filter$1(function (_a) {\n                var didOverlap = _a[0], overlapsNow = _a[1];\n                return didOverlap && !overlapsNow;\n            }))\n                .subscribe(function () {\n                dragOverActive = false;\n                _this.zone.run(function () {\n                    _this.dragLeave.next({\n                        dropData: currentDragDropData\n                    });\n                });\n            });\n            drag.pipe(mergeMap$1(function () { return overlaps; })).subscribe({\n                complete: function () {\n                    if (dragOverActive) {\n                        _this.zone.run(function () {\n                            _this.drop.next({\n                                dropData: currentDragDropData\n                            });\n                        });\n                    }\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    DroppableDirective.prototype.ngOnDestroy = function () {\n        this.currentDragSubscription.unsubscribe();\n    };\n    return DroppableDirective;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DragAndDropModule = /*@__PURE__*/ (function () {\n    function DragAndDropModule() {\n    }\n    /**\n     * @return {?}\n     */\n    DragAndDropModule.forRoot = function () {\n        return {\n            ngModule: DragAndDropModule,\n            providers: [DraggableHelper]\n        };\n    };\n    return DragAndDropModule;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { DragAndDropModule, DraggableHelper, DraggableDirective as ɵa, DroppableDirective as ɵb };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\angular-draggable-droppable\\esm5\\angular-draggable-droppable.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\angular-draggable-droppable\\esm5\\angular-draggable-droppable.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output, Renderer2 } from '@angular/core';\nimport { Subject as Subject$1 } from 'rxjs/Subject';\nimport { merge as merge$1 } from 'rxjs/observable/merge';\nimport { map as map$1 } from 'rxjs/operators/map';\nimport { mergeMap as mergeMap$1 } from 'rxjs/operators/mergeMap';\nimport { takeUntil as takeUntil$1 } from 'rxjs/operators/takeUntil';\nimport { take as take$1 } from 'rxjs/operators/take';\nimport { takeLast as takeLast$1 } from 'rxjs/operators/takeLast';\nimport { pairwise as pairwise$1 } from 'rxjs/operators/pairwise';\nimport { share as share$1 } from 'rxjs/operators/share';\nimport { filter as filter$1 } from 'rxjs/operators/filter';\nimport { distinctUntilChanged as distinctUntilChanged$1 } from 'rxjs/operators/distinctUntilChanged';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DraggableHelper = /** @class */ (function () {\n    function DraggableHelper() {\n        this.currentDrag = new Subject$1();\n    }\n    return DraggableHelper;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @record\n */\n/**\n * @record\n */\nvar MOVE_CURSOR = 'move';\nvar DraggableDirective = /** @class */ (function () {\n    /**\n     * @hidden\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} draggableHelper\n     * @param {?} zone\n     */\n    function DraggableDirective(element, renderer, draggableHelper, zone) {\n        this.element = element;\n        this.renderer = renderer;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        /**\n         * The axis along which the element is draggable\n         */\n        this.dragAxis = { x: true, y: true };\n        /**\n         * Snap all drags to an x / y grid\n         */\n        this.dragSnapGrid = {};\n        /**\n         * Show a ghost element that shows the drag when dragging\n         */\n        this.ghostDragEnabled = true;\n        /**\n         * The cursor to use when dragging the element\n         */\n        this.dragCursor = MOVE_CURSOR;\n        /**\n         * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it\n         */\n        this.dragPointerDown = new EventEmitter();\n        /**\n         * Called when the element has started to be dragged.\n         * Only called after at least one mouse or touch move event\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * Called when the element is being dragged\n         */\n        this.dragging = new EventEmitter();\n        /**\n         * Called after the element is dragged\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.pointerDown = new Subject$1();\n        /**\n         * @hidden\n         */\n        this.pointerMove = new Subject$1();\n        /**\n         * @hidden\n         */\n        this.pointerUp = new Subject$1();\n        this.eventListenerSubscriptions = {};\n    }\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        this.checkEventListeners();\n        var /** @type {?} */ pointerDrag = this.pointerDown\n            .pipe(filter$1(function () { return _this.canDrag(); }))\n            .pipe(mergeMap$1(function (pointerDownEvent) {\n            var /** @type {?} */ currentDrag = new Subject$1();\n            _this.zone.run(function () {\n                _this.dragPointerDown.next({ x: 0, y: 0 });\n            });\n            var /** @type {?} */ pointerMove = _this.pointerMove\n                .pipe(map$1(function (pointerMoveEvent) {\n                pointerMoveEvent.event.preventDefault();\n                return {\n                    currentDrag: currentDrag,\n                    x: pointerMoveEvent.clientX - pointerDownEvent.clientX,\n                    y: pointerMoveEvent.clientY - pointerDownEvent.clientY,\n                    clientX: pointerMoveEvent.clientX,\n                    clientY: pointerMoveEvent.clientY\n                };\n            }))\n                .pipe(map$1(function (moveData) {\n                if (_this.dragSnapGrid.x) {\n                    moveData.x =\n                        Math.floor(moveData.x / _this.dragSnapGrid.x) *\n                            _this.dragSnapGrid.x;\n                }\n                if (_this.dragSnapGrid.y) {\n                    moveData.y =\n                        Math.floor(moveData.y / _this.dragSnapGrid.y) *\n                            _this.dragSnapGrid.y;\n                }\n                return moveData;\n            }))\n                .pipe(map$1(function (moveData) {\n                if (!_this.dragAxis.x) {\n                    moveData.x = 0;\n                }\n                if (!_this.dragAxis.y) {\n                    moveData.y = 0;\n                }\n                return moveData;\n            }))\n                .pipe(filter$1(function (_a) {\n                var x = _a.x, y = _a.y;\n                return !_this.validateDrag || _this.validateDrag({ x: x, y: y });\n            }))\n                .pipe(takeUntil$1(merge$1(_this.pointerUp, _this.pointerDown)))\n                .pipe(share$1());\n            pointerMove.pipe(take$1(1)).subscribe(function () {\n                pointerDownEvent.event.preventDefault();\n                _this.zone.run(function () {\n                    _this.dragStart.next({ x: 0, y: 0 });\n                });\n                _this.setCursor(_this.dragCursor);\n                _this.draggableHelper.currentDrag.next(currentDrag);\n            });\n            pointerMove.pipe(takeLast$1(1)).subscribe(function (_a) {\n                var x = _a.x, y = _a.y;\n                _this.zone.run(function () {\n                    _this.dragEnd.next({ x: x, y: y });\n                });\n                currentDrag.complete();\n                _this.setCssTransform(null);\n                if (_this.ghostDragEnabled) {\n                    _this.renderer.setStyle(_this.element.nativeElement, 'pointerEvents', null);\n                }\n            });\n            return pointerMove;\n        }))\n            .pipe(share$1());\n        merge$1(pointerDrag.pipe(take$1(1)).pipe(map$1(function (value) { return [, value]; })), pointerDrag.pipe(pairwise$1()))\n            .pipe(filter$1(function (_a) {\n            var previous = _a[0], next = _a[1];\n            if (!previous) {\n                return true;\n            }\n            return previous.x !== next.x || previous.y !== next.y;\n        }))\n            .pipe(map$1(function (_a) {\n            var previous = _a[0], next = _a[1];\n            return next;\n        }))\n            .subscribe(function (_a) {\n            var x = _a.x, y = _a.y, currentDrag = _a.currentDrag, clientX = _a.clientX, clientY = _a.clientY;\n            _this.zone.run(function () {\n                _this.dragging.next({ x: x, y: y });\n            });\n            if (_this.ghostDragEnabled) {\n                _this.renderer.setStyle(_this.element.nativeElement, 'pointerEvents', 'none');\n            }\n            _this.setCssTransform(\"translate(\" + x + \"px, \" + y + \"px)\");\n            currentDrag.next({\n                clientX: clientX,\n                clientY: clientY,\n                dropData: _this.dropData\n            });\n        });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnChanges = function (changes) {\n        if (changes['dragAxis']) {\n            this.checkEventListeners();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.ngOnDestroy = function () {\n        this.unsubscribeEventListeners();\n        this.pointerDown.complete();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.checkEventListeners = function () {\n        var _this = this;\n        var /** @type {?} */ canDrag = this.canDrag();\n        var /** @type {?} */ hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;\n        if (canDrag && !hasEventListeners) {\n            this.zone.runOutsideAngular(function () {\n                _this.eventListenerSubscriptions.mousedown = _this.renderer.listen(_this.element.nativeElement, 'mousedown', function (event) {\n                    _this.onMouseDown(event);\n                });\n                _this.eventListenerSubscriptions.mouseup = _this.renderer.listen('document', 'mouseup', function (event) {\n                    _this.onMouseUp(event);\n                });\n                _this.eventListenerSubscriptions.touchstart = _this.renderer.listen(_this.element.nativeElement, 'touchstart', function (event) {\n                    _this.onTouchStart(event);\n                });\n                _this.eventListenerSubscriptions.touchend = _this.renderer.listen('document', 'touchend', function (event) {\n                    _this.onTouchEnd(event);\n                });\n                _this.eventListenerSubscriptions.touchcancel = _this.renderer.listen('document', 'touchcancel', function (event) {\n                    _this.onTouchEnd(event);\n                });\n                _this.eventListenerSubscriptions.mouseenter = _this.renderer.listen(_this.element.nativeElement, 'mouseenter', function () {\n                    _this.onMouseEnter();\n                });\n                _this.eventListenerSubscriptions.mouseleave = _this.renderer.listen(_this.element.nativeElement, 'mouseleave', function () {\n                    _this.onMouseLeave();\n                });\n            });\n        }\n        else if (!canDrag && hasEventListeners) {\n            this.unsubscribeEventListeners();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseDown = function (event) {\n        var _this = this;\n        if (!this.eventListenerSubscriptions.mousemove) {\n            this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove', function (mouseMoveEvent) {\n                _this.pointerMove.next({\n                    event: mouseMoveEvent,\n                    clientX: mouseMoveEvent.clientX,\n                    clientY: mouseMoveEvent.clientY\n                });\n            });\n        }\n        this.pointerDown.next({\n            event: event,\n            clientX: event.clientX,\n            clientY: event.clientY\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseUp = function (event) {\n        if (this.eventListenerSubscriptions.mousemove) {\n            this.eventListenerSubscriptions.mousemove();\n            delete this.eventListenerSubscriptions.mousemove;\n        }\n        this.pointerUp.next({\n            event: event,\n            clientX: event.clientX,\n            clientY: event.clientY\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onTouchStart = function (event) {\n        var _this = this;\n        if (!this.eventListenerSubscriptions.touchmove) {\n            this.eventListenerSubscriptions.touchmove = this.renderer.listen('document', 'touchmove', function (touchMoveEvent) {\n                _this.pointerMove.next({\n                    event: touchMoveEvent,\n                    clientX: touchMoveEvent.targetTouches[0].clientX,\n                    clientY: touchMoveEvent.targetTouches[0].clientY\n                });\n            });\n        }\n        this.pointerDown.next({\n            event: event,\n            clientX: event.touches[0].clientX,\n            clientY: event.touches[0].clientY\n        });\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    DraggableDirective.prototype.onTouchEnd = function (event) {\n        if (this.eventListenerSubscriptions.touchmove) {\n            this.eventListenerSubscriptions.touchmove();\n            delete this.eventListenerSubscriptions.touchmove;\n        }\n        this.pointerUp.next({\n            event: event,\n            clientX: event.changedTouches[0].clientX,\n            clientY: event.changedTouches[0].clientY\n        });\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseEnter = function () {\n        this.setCursor(this.dragCursor);\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.onMouseLeave = function () {\n        this.setCursor(null);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DraggableDirective.prototype.setCssTransform = function (value) {\n        var _this = this;\n        if (this.ghostDragEnabled) {\n            var /** @type {?} */ transformAttributes = [\n                'transform',\n                '-webkit-transform',\n                '-ms-transform',\n                '-moz-transform',\n                '-o-transform'\n            ];\n            transformAttributes.forEach(function (transformAttribute) {\n                _this.renderer.setStyle(_this.element.nativeElement, transformAttribute, value);\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.canDrag = function () {\n        return this.dragAxis.x || this.dragAxis.y;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DraggableDirective.prototype.setCursor = function (value) {\n        this.renderer.setStyle(this.element.nativeElement, 'cursor', value);\n    };\n    /**\n     * @return {?}\n     */\n    DraggableDirective.prototype.unsubscribeEventListeners = function () {\n        var _this = this;\n        Object.keys(this.eventListenerSubscriptions).forEach(function (type) {\n            ((_this)).eventListenerSubscriptions[type]();\n            delete ((_this)).eventListenerSubscriptions[type];\n        });\n    };\n    return DraggableDirective;\n}());\nDraggableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[mwlDraggable]'\n            },] },\n];\n/** @nocollapse */\nDraggableDirective.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: Renderer2, },\n    { type: DraggableHelper, },\n    { type: NgZone, },\n]; };\nDraggableDirective.propDecorators = {\n    \"dropData\": [{ type: Input },],\n    \"dragAxis\": [{ type: Input },],\n    \"dragSnapGrid\": [{ type: Input },],\n    \"ghostDragEnabled\": [{ type: Input },],\n    \"validateDrag\": [{ type: Input },],\n    \"dragCursor\": [{ type: Input },],\n    \"dragPointerDown\": [{ type: Output },],\n    \"dragStart\": [{ type: Output },],\n    \"dragging\": [{ type: Output },],\n    \"dragEnd\": [{ type: Output },],\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} clientX\n * @param {?} clientY\n * @param {?} rect\n * @return {?}\n */\nfunction isCoordinateWithinRectangle(clientX, clientY, rect) {\n    return (clientX >= rect.left &&\n        clientX <= rect.right &&\n        clientY >= rect.top &&\n        clientY <= rect.bottom);\n}\n/**\n * @record\n */\nvar DroppableDirective = /** @class */ (function () {\n    /**\n     * @param {?} element\n     * @param {?} draggableHelper\n     * @param {?} zone\n     */\n    function DroppableDirective(element, draggableHelper, zone) {\n        this.element = element;\n        this.draggableHelper = draggableHelper;\n        this.zone = zone;\n        /**\n         * Called when a draggable element starts overlapping the element\n         */\n        this.dragEnter = new EventEmitter();\n        /**\n         * Called when a draggable element stops overlapping the element\n         */\n        this.dragLeave = new EventEmitter();\n        /**\n         * Called when a draggable element is moved over the element\n         */\n        this.dragOver = new EventEmitter();\n        /**\n         * Called when a draggable element is dropped on this element\n         */\n        this.drop = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    DroppableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        /**\n         * @record\n         */\n        this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(function (drag) {\n            var /** @type {?} */ droppableRectangle = _this.element.nativeElement.getBoundingClientRect();\n            var /** @type {?} */ currentDragDropData;\n            var /** @type {?} */ overlaps = drag.pipe(map$1(function (_a) {\n                var clientX = _a.clientX, clientY = _a.clientY, dropData = _a.dropData;\n                currentDragDropData = dropData;\n                return isCoordinateWithinRectangle(clientX, clientY, droppableRectangle);\n            }));\n            var /** @type {?} */ overlapsChanged = overlaps.pipe(distinctUntilChanged$1());\n            var /** @type {?} */ dragOverActive; // TODO - see if there's a way of doing this via rxjs\n            overlapsChanged\n                .pipe(filter$1(function (overlapsNow) { return overlapsNow; }))\n                .subscribe(function () {\n                dragOverActive = true;\n                _this.zone.run(function () {\n                    _this.dragEnter.next({\n                        dropData: currentDragDropData\n                    });\n                });\n            });\n            overlaps.pipe(filter$1(function (overlapsNow) { return overlapsNow; })).subscribe(function () {\n                _this.zone.run(function () {\n                    _this.dragOver.next({\n                        dropData: currentDragDropData\n                    });\n                });\n            });\n            overlapsChanged\n                .pipe(pairwise$1())\n                .pipe(filter$1(function (_a) {\n                var didOverlap = _a[0], overlapsNow = _a[1];\n                return didOverlap && !overlapsNow;\n            }))\n                .subscribe(function () {\n                dragOverActive = false;\n                _this.zone.run(function () {\n                    _this.dragLeave.next({\n                        dropData: currentDragDropData\n                    });\n                });\n            });\n            drag.pipe(mergeMap$1(function () { return overlaps; })).subscribe({\n                complete: function () {\n                    if (dragOverActive) {\n                        _this.zone.run(function () {\n                            _this.drop.next({\n                                dropData: currentDragDropData\n                            });\n                        });\n                    }\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    DroppableDirective.prototype.ngOnDestroy = function () {\n        this.currentDragSubscription.unsubscribe();\n    };\n    return DroppableDirective;\n}());\nDroppableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[mwlDroppable]'\n            },] },\n];\n/** @nocollapse */\nDroppableDirective.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: DraggableHelper, },\n    { type: NgZone, },\n]; };\nDroppableDirective.propDecorators = {\n    \"dragEnter\": [{ type: Output },],\n    \"dragLeave\": [{ type: Output },],\n    \"dragOver\": [{ type: Output },],\n    \"drop\": [{ type: Output },],\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DragAndDropModule = /** @class */ (function () {\n    function DragAndDropModule() {\n    }\n    /**\n     * @return {?}\n     */\n    DragAndDropModule.forRoot = function () {\n        return {\n            ngModule: DragAndDropModule,\n            providers: [DraggableHelper]\n        };\n    };\n    return DragAndDropModule;\n}());\nDragAndDropModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [DraggableDirective, DroppableDirective],\n                exports: [DraggableDirective, DroppableDirective]\n            },] },\n];\n/** @nocollapse */\nDragAndDropModule.ctorParameters = function () { return []; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { DragAndDropModule, DraggableHelper, DraggableDirective as ɵa, DroppableDirective as ɵb };\n//# sourceMappingURL=angular-draggable-droppable.js.map\n"]}]}