{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\accordion\\accordion.component.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\accordion\\accordion.component.js","mtime":1614055064694},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input } from '@angular/core';\nimport { AccordionConfig } from './accordion.config';\n/** Displays collapsible content panels for presenting information in a limited amount of space. */\nvar AccordionComponent = /*@__PURE__*/ (function () {\n    function AccordionComponent(config) {\n        this.groups = [];\n        Object.assign(this, config);\n    }\n    AccordionComponent.prototype.closeOtherPanels = function (openGroup) {\n        if (!this.closeOthers) {\n            return;\n        }\n        this.groups.forEach(function (group) {\n            if (group !== openGroup) {\n                group.isOpen = false;\n            }\n        });\n    };\n    AccordionComponent.prototype.addGroup = function (group) {\n        this.groups.push(group);\n    };\n    AccordionComponent.prototype.removeGroup = function (group) {\n        var index = this.groups.indexOf(group);\n        if (index !== -1) {\n            this.groups.splice(index, 1);\n        }\n    };\n    return AccordionComponent;\n}());\nexport { AccordionComponent };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\accordion\\accordion.component.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\accordion\\accordion.component.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AACrD,mGAAmG;AACnG,IAAI,kBAAkB,iBAAG,CAAC;IACtB,4BAA4B,MAAM;QAC9B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IACD,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,SAAS;QAC/D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC;QACX,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,KAAK;YAC/B,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YACzB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IACF,kBAAkB,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK;QACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC;IACF,kBAAkB,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,KAAK;QACtD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,CAAC;IACL,CAAC,CAAC;IAoBF,MAAM,CAAC,kBAAkB,CAAC;GAC3B,CAAC,CAAC;AACL,OAAO,EAAE,kBAAkB,EAAE,CAAC;AAC9B,+CAA+C","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { AccordionConfig } from './accordion.config';\n/** Displays collapsible content panels for presenting information in a limited amount of space. */\nvar AccordionComponent = (function () {\n    function AccordionComponent(config) {\n        this.groups = [];\n        Object.assign(this, config);\n    }\n    AccordionComponent.prototype.closeOtherPanels = function (openGroup) {\n        if (!this.closeOthers) {\n            return;\n        }\n        this.groups.forEach(function (group) {\n            if (group !== openGroup) {\n                group.isOpen = false;\n            }\n        });\n    };\n    AccordionComponent.prototype.addGroup = function (group) {\n        this.groups.push(group);\n    };\n    AccordionComponent.prototype.removeGroup = function (group) {\n        var index = this.groups.indexOf(group);\n        if (index !== -1) {\n            this.groups.splice(index, 1);\n        }\n    };\n    AccordionComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'accordion',\n                    template: \"<ng-content></ng-content>\",\n                    host: {\n                        '[attr.aria-multiselectable]': 'closeOthers',\n                        role: 'tablist',\n                        class: 'panel-group',\n                        style: 'display: block'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    AccordionComponent.ctorParameters = function () { return [\n        { type: AccordionConfig, },\n    ]; };\n    AccordionComponent.propDecorators = {\n        'closeOthers': [{ type: Input },],\n    };\n    return AccordionComponent;\n}());\nexport { AccordionComponent };\n//# sourceMappingURL=accordion.component.js.map"]}]}