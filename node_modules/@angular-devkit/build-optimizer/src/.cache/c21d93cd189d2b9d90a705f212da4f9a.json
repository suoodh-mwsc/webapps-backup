{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\popover\\popover.directive.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\popover\\popover.directive.js","mtime":1614055095107},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Directive, ElementRef, Input, Output, Renderer2, ViewContainerRef } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PopoverContainerComponent } from './popover-container.component';\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nvar PopoverDirective = /*@__PURE__*/ (function () {\n    function PopoverDirective(_elementRef, _renderer, _viewContainerRef, _config, cis) {\n        /**\n         * Close popover on outside click\n         */\n        this.outsideClick = false;\n        /**\n         * Css class for popover container\n         */\n        this.containerClass = '';\n        this._isInited = false;\n        this._popover = cis\n            .createLoader(_elementRef, _viewContainerRef, _renderer)\n            .provide({ provide: PopoverConfig, useValue: _config });\n        Object.assign(this, _config);\n        this.onShown = this._popover.onShown;\n        this.onHidden = this._popover.onHidden;\n        // fix: no focus on button on Mac OS #1795\n        if (typeof window !== 'undefined') {\n            _elementRef.nativeElement.addEventListener('click', function () {\n                try {\n                    _elementRef.nativeElement.focus();\n                }\n                catch (err) {\n                    return;\n                }\n            });\n        }\n    }\n    Object.defineProperty(PopoverDirective.prototype, \"isOpen\", {\n        /**\n         * Returns whether or not the popover is currently being shown\n         */\n        get: function () {\n            return this._popover.isShown;\n        },\n        set: function (value) {\n            if (value) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    PopoverDirective.prototype.show = function () {\n        if (this._popover.isShown || !this.popover) {\n            return;\n        }\n        this._popover\n            .attach(PopoverContainerComponent)\n            .to(this.container)\n            .position({ attachment: this.placement })\n            .show({\n            content: this.popover,\n            context: this.popoverContext,\n            placement: this.placement,\n            title: this.popoverTitle,\n            containerClass: this.containerClass\n        });\n        this.isOpen = true;\n    };\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    PopoverDirective.prototype.hide = function () {\n        if (this.isOpen) {\n            this._popover.hide();\n            this.isOpen = false;\n        }\n    };\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    PopoverDirective.prototype.toggle = function () {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    };\n    PopoverDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        this._popover.listen({\n            triggers: this.triggers,\n            outsideClick: this.outsideClick,\n            show: function () { return _this.show(); }\n        });\n    };\n    PopoverDirective.prototype.ngOnDestroy = function () {\n        this._popover.dispose();\n    };\n    return PopoverDirective;\n}());\nexport { PopoverDirective };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\popover\\popover.directive.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\popover\\popover.directive.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Input, Output, Renderer2, ViewContainerRef } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoaderFactory } from '../component-loader/index';\nimport { PopoverContainerComponent } from './popover-container.component';\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\nvar PopoverDirective = (function () {\n    function PopoverDirective(_elementRef, _renderer, _viewContainerRef, _config, cis) {\n        /**\n         * Close popover on outside click\n         */\n        this.outsideClick = false;\n        /**\n         * Css class for popover container\n         */\n        this.containerClass = '';\n        this._isInited = false;\n        this._popover = cis\n            .createLoader(_elementRef, _viewContainerRef, _renderer)\n            .provide({ provide: PopoverConfig, useValue: _config });\n        Object.assign(this, _config);\n        this.onShown = this._popover.onShown;\n        this.onHidden = this._popover.onHidden;\n        // fix: no focus on button on Mac OS #1795\n        if (typeof window !== 'undefined') {\n            _elementRef.nativeElement.addEventListener('click', function () {\n                try {\n                    _elementRef.nativeElement.focus();\n                }\n                catch (err) {\n                    return;\n                }\n            });\n        }\n    }\n    Object.defineProperty(PopoverDirective.prototype, \"isOpen\", {\n        /**\n         * Returns whether or not the popover is currently being shown\n         */\n        get: function () {\n            return this._popover.isShown;\n        },\n        set: function (value) {\n            if (value) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    PopoverDirective.prototype.show = function () {\n        if (this._popover.isShown || !this.popover) {\n            return;\n        }\n        this._popover\n            .attach(PopoverContainerComponent)\n            .to(this.container)\n            .position({ attachment: this.placement })\n            .show({\n            content: this.popover,\n            context: this.popoverContext,\n            placement: this.placement,\n            title: this.popoverTitle,\n            containerClass: this.containerClass\n        });\n        this.isOpen = true;\n    };\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    PopoverDirective.prototype.hide = function () {\n        if (this.isOpen) {\n            this._popover.hide();\n            this.isOpen = false;\n        }\n    };\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    PopoverDirective.prototype.toggle = function () {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    };\n    PopoverDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        this._popover.listen({\n            triggers: this.triggers,\n            outsideClick: this.outsideClick,\n            show: function () { return _this.show(); }\n        });\n    };\n    PopoverDirective.prototype.ngOnDestroy = function () {\n        this._popover.dispose();\n    };\n    PopoverDirective.decorators = [\n        { type: Directive, args: [{ selector: '[popover]', exportAs: 'bs-popover' },] },\n    ];\n    /** @nocollapse */\n    PopoverDirective.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: Renderer2, },\n        { type: ViewContainerRef, },\n        { type: PopoverConfig, },\n        { type: ComponentLoaderFactory, },\n    ]; };\n    PopoverDirective.propDecorators = {\n        'popover': [{ type: Input },],\n        'popoverContext': [{ type: Input },],\n        'popoverTitle': [{ type: Input },],\n        'placement': [{ type: Input },],\n        'outsideClick': [{ type: Input },],\n        'triggers': [{ type: Input },],\n        'container': [{ type: Input },],\n        'containerClass': [{ type: Input },],\n        'isOpen': [{ type: Input },],\n        'onShown': [{ type: Output },],\n        'onHidden': [{ type: Output },],\n    };\n    return PopoverDirective;\n}());\nexport { PopoverDirective };\n//# sourceMappingURL=popover.directive.js.map"]}]}