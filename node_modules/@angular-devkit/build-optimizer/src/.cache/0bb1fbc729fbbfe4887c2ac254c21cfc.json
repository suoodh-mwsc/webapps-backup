{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\tab.directive.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\tab.directive.js","mtime":1614055097906},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Directive, EventEmitter, HostBinding, Input, Output, ElementRef, Renderer2 } from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\nvar TabDirective = /*@__PURE__*/ (function () {\n    function TabDirective(tabset, elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n        this.select = new EventEmitter();\n        /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n        this.deselect = new EventEmitter();\n        /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n        this.removed = new EventEmitter();\n        this.addClass = true;\n        this.tabset = tabset;\n        this.tabset.addTab(this);\n    }\n    Object.defineProperty(TabDirective.prototype, \"customClass\", {\n        /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n        get: function () {\n            return this._customClass;\n        },\n        set: function (customClass) {\n            var _this = this;\n            if (this.customClass) {\n                this.customClass.split(' ').forEach(function (cssClass) {\n                    _this.renderer.removeClass(_this.elementRef.nativeElement, cssClass);\n                });\n            }\n            this._customClass = customClass ? customClass.trim() : null;\n            if (this.customClass) {\n                this.customClass.split(' ').forEach(function (cssClass) {\n                    _this.renderer.addClass(_this.elementRef.nativeElement, cssClass);\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabDirective.prototype, \"active\", {\n        /** tab active state toggle */\n        get: function () {\n            return this._active;\n        },\n        set: function (active) {\n            var _this = this;\n            if (this._active === active) {\n                return;\n            }\n            if ((this.disabled && active) || !active) {\n                if (this._active && !active) {\n                    this.deselect.emit(this);\n                    this._active = active;\n                }\n                return;\n            }\n            this._active = active;\n            this.select.emit(this);\n            this.tabset.tabs.forEach(function (tab) {\n                if (tab !== _this) {\n                    tab.active = false;\n                }\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabDirective.prototype.ngOnInit = function () {\n        this.removable = this.removable;\n    };\n    TabDirective.prototype.ngOnDestroy = function () {\n        this.tabset.removeTab(this, { reselect: false, emit: false });\n    };\n    return TabDirective;\n}());\nexport { TabDirective };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\tab.directive.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\tabs\\tab.directive.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["import { Directive, EventEmitter, HostBinding, Input, Output, ElementRef, Renderer2 } from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\nvar TabDirective = (function () {\n    function TabDirective(tabset, elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n        this.select = new EventEmitter();\n        /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n        this.deselect = new EventEmitter();\n        /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n        this.removed = new EventEmitter();\n        this.addClass = true;\n        this.tabset = tabset;\n        this.tabset.addTab(this);\n    }\n    Object.defineProperty(TabDirective.prototype, \"customClass\", {\n        /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n        get: function () {\n            return this._customClass;\n        },\n        set: function (customClass) {\n            var _this = this;\n            if (this.customClass) {\n                this.customClass.split(' ').forEach(function (cssClass) {\n                    _this.renderer.removeClass(_this.elementRef.nativeElement, cssClass);\n                });\n            }\n            this._customClass = customClass ? customClass.trim() : null;\n            if (this.customClass) {\n                this.customClass.split(' ').forEach(function (cssClass) {\n                    _this.renderer.addClass(_this.elementRef.nativeElement, cssClass);\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TabDirective.prototype, \"active\", {\n        /** tab active state toggle */\n        get: function () {\n            return this._active;\n        },\n        set: function (active) {\n            var _this = this;\n            if (this._active === active) {\n                return;\n            }\n            if ((this.disabled && active) || !active) {\n                if (this._active && !active) {\n                    this.deselect.emit(this);\n                    this._active = active;\n                }\n                return;\n            }\n            this._active = active;\n            this.select.emit(this);\n            this.tabset.tabs.forEach(function (tab) {\n                if (tab !== _this) {\n                    tab.active = false;\n                }\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabDirective.prototype.ngOnInit = function () {\n        this.removable = this.removable;\n    };\n    TabDirective.prototype.ngOnDestroy = function () {\n        this.tabset.removeTab(this, { reselect: false, emit: false });\n    };\n    TabDirective.decorators = [\n        { type: Directive, args: [{ selector: 'tab, [tab]' },] },\n    ];\n    /** @nocollapse */\n    TabDirective.ctorParameters = function () { return [\n        { type: TabsetComponent, },\n        { type: ElementRef, },\n        { type: Renderer2, },\n    ]; };\n    TabDirective.propDecorators = {\n        'heading': [{ type: Input },],\n        'id': [{ type: HostBinding, args: ['attr.id',] }, { type: Input },],\n        'disabled': [{ type: Input },],\n        'removable': [{ type: Input },],\n        'customClass': [{ type: Input },],\n        'active': [{ type: HostBinding, args: ['class.active',] }, { type: Input },],\n        'select': [{ type: Output },],\n        'deselect': [{ type: Output },],\n        'removed': [{ type: Output },],\n        'addClass': [{ type: HostBinding, args: ['class.tab-pane',] },],\n    };\n    return TabDirective;\n}());\nexport { TabDirective };\n//# sourceMappingURL=tab.directive.js.map"]}]}