{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\ng-positioning.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\ng-positioning.js","mtime":1614055095528},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nvar Positioning = /*@__PURE__*/ (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) {\n            round = true;\n        }\n        var elPosition;\n        var parentOffset = {\n            width: 0,\n            height: 0,\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0\n        };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            var bcRect = element.getBoundingClientRect();\n            elPosition = {\n                width: bcRect.width,\n                height: bcRect.height,\n                top: bcRect.top,\n                bottom: bcRect.bottom,\n                left: bcRect.left,\n                right: bcRect.right\n            };\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) {\n            round = true;\n        }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody\n            ? this.offset(hostElement, false)\n            : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var shiftWidth = {\n            left: hostElPosition.left,\n            center: hostElPosition.left +\n                hostElPosition.width / 2 -\n                targetElement.offsetWidth / 2,\n            right: hostElPosition.left + hostElPosition.width\n        };\n        var shiftHeight = {\n            top: hostElPosition.top,\n            center: hostElPosition.top +\n                hostElPosition.height / 2 -\n                targetElement.offsetHeight / 2,\n            bottom: hostElPosition.top + hostElPosition.height\n        };\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split(' ')[0] || 'top';\n        var placementSecondary = placement.split(' ')[1] || 'center';\n        var targetElPosition = {\n            height: targetElBCR.height || targetElement.offsetHeight,\n            width: targetElBCR.width || targetElement.offsetWidth,\n            top: 0,\n            bottom: targetElBCR.height || targetElement.offsetHeight,\n            left: 0,\n            right: targetElBCR.width || targetElement.offsetWidth\n        };\n        if (placementPrimary === 'auto') {\n            var newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement, placementSecondary);\n            if (!newPlacementPrimary)\n                newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement);\n            if (newPlacementPrimary)\n                placementPrimary = newPlacementPrimary;\n            targetElement.classList.add(placementPrimary);\n        }\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top -\n                        (targetElement.offsetHeight +\n                            parseFloat(targetElStyles.marginBottom));\n                targetElPosition.bottom +=\n                    hostElPosition.top - targetElement.offsetHeight;\n                targetElPosition.left = shiftWidth[placementSecondary];\n                targetElPosition.right += shiftWidth[placementSecondary];\n                break;\n            case 'bottom':\n                targetElPosition.top = shiftHeight[placementPrimary];\n                targetElPosition.bottom += shiftHeight[placementPrimary];\n                targetElPosition.left = shiftWidth[placementSecondary];\n                targetElPosition.right += shiftWidth[placementSecondary];\n                break;\n            case 'left':\n                targetElPosition.top = shiftHeight[placementSecondary];\n                targetElPosition.bottom += shiftHeight[placementSecondary];\n                targetElPosition.left =\n                    hostElPosition.left -\n                        (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                targetElPosition.right +=\n                    hostElPosition.left - targetElement.offsetWidth;\n                break;\n            case 'right':\n                targetElPosition.top = shiftHeight[placementSecondary];\n                targetElPosition.bottom += shiftHeight[placementSecondary];\n                targetElPosition.left = shiftWidth[placementPrimary];\n                targetElPosition.right += shiftWidth[placementPrimary];\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    Positioning.prototype.autoPosition = function (targetElPosition, hostElPosition, targetElement, preferredPosition) {\n        if ((!preferredPosition || preferredPosition === 'right') &&\n            targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n                0) {\n            return 'right';\n        }\n        else if ((!preferredPosition || preferredPosition === 'top') &&\n            targetElPosition.bottom +\n                hostElPosition.bottom +\n                targetElement.offsetHeight >\n                window.innerHeight) {\n            return 'top';\n        }\n        else if ((!preferredPosition || preferredPosition === 'bottom') &&\n            targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0) {\n            return 'bottom';\n        }\n        else if ((!preferredPosition || preferredPosition === 'left') &&\n            targetElPosition.right +\n                hostElPosition.right +\n                targetElement.offsetWidth >\n                window.innerWidth) {\n            return 'left';\n        }\n        return null;\n    };\n    Positioning.prototype.getAllStyles = function (element) {\n        return window.getComputedStyle(element);\n    };\n    Positioning.prototype.getStyle = function (element, prop) {\n        return this.getAllStyles(element)[prop];\n    };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl &&\n            offsetParentEl !== document.documentElement &&\n            this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    return Positioning;\n}());\nexport { Positioning };\nvar positionService = new Positioning();\nexport function positionElements(hostElement, targetElement, placement, appendToBody) {\n    var pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n    targetElement.style.top = pos.top + \"px\";\n    targetElement.style.left = pos.left + \"px\";\n}\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\ng-positioning.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\ng-positioning.js.pre-build-optimizer.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n// tslint:disable\nvar Positioning = (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = {\n            width: 0,\n            height: 0,\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0\n        };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            var bcRect = element.getBoundingClientRect();\n            elPosition = {\n                width: bcRect.width,\n                height: bcRect.height,\n                top: bcRect.top,\n                bottom: bcRect.bottom,\n                left: bcRect.left,\n                right: bcRect.right\n            };\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody\n            ? this.offset(hostElement, false)\n            : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var shiftWidth = {\n            left: hostElPosition.left,\n            center: hostElPosition.left +\n                hostElPosition.width / 2 -\n                targetElement.offsetWidth / 2,\n            right: hostElPosition.left + hostElPosition.width\n        };\n        var shiftHeight = {\n            top: hostElPosition.top,\n            center: hostElPosition.top +\n                hostElPosition.height / 2 -\n                targetElement.offsetHeight / 2,\n            bottom: hostElPosition.top + hostElPosition.height\n        };\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split(' ')[0] || 'top';\n        var placementSecondary = placement.split(' ')[1] || 'center';\n        var targetElPosition = {\n            height: targetElBCR.height || targetElement.offsetHeight,\n            width: targetElBCR.width || targetElement.offsetWidth,\n            top: 0,\n            bottom: targetElBCR.height || targetElement.offsetHeight,\n            left: 0,\n            right: targetElBCR.width || targetElement.offsetWidth\n        };\n        if (placementPrimary === 'auto') {\n            var newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement, placementSecondary);\n            if (!newPlacementPrimary)\n                newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement);\n            if (newPlacementPrimary)\n                placementPrimary = newPlacementPrimary;\n            targetElement.classList.add(placementPrimary);\n        }\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top -\n                        (targetElement.offsetHeight +\n                            parseFloat(targetElStyles.marginBottom));\n                targetElPosition.bottom +=\n                    hostElPosition.top - targetElement.offsetHeight;\n                targetElPosition.left = shiftWidth[placementSecondary];\n                targetElPosition.right += shiftWidth[placementSecondary];\n                break;\n            case 'bottom':\n                targetElPosition.top = shiftHeight[placementPrimary];\n                targetElPosition.bottom += shiftHeight[placementPrimary];\n                targetElPosition.left = shiftWidth[placementSecondary];\n                targetElPosition.right += shiftWidth[placementSecondary];\n                break;\n            case 'left':\n                targetElPosition.top = shiftHeight[placementSecondary];\n                targetElPosition.bottom += shiftHeight[placementSecondary];\n                targetElPosition.left =\n                    hostElPosition.left -\n                        (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                targetElPosition.right +=\n                    hostElPosition.left - targetElement.offsetWidth;\n                break;\n            case 'right':\n                targetElPosition.top = shiftHeight[placementSecondary];\n                targetElPosition.bottom += shiftHeight[placementSecondary];\n                targetElPosition.left = shiftWidth[placementPrimary];\n                targetElPosition.right += shiftWidth[placementPrimary];\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    Positioning.prototype.autoPosition = function (targetElPosition, hostElPosition, targetElement, preferredPosition) {\n        if ((!preferredPosition || preferredPosition === 'right') &&\n            targetElPosition.left + hostElPosition.left - targetElement.offsetWidth <\n                0) {\n            return 'right';\n        }\n        else if ((!preferredPosition || preferredPosition === 'top') &&\n            targetElPosition.bottom +\n                hostElPosition.bottom +\n                targetElement.offsetHeight >\n                window.innerHeight) {\n            return 'top';\n        }\n        else if ((!preferredPosition || preferredPosition === 'bottom') &&\n            targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0) {\n            return 'bottom';\n        }\n        else if ((!preferredPosition || preferredPosition === 'left') &&\n            targetElPosition.right +\n                hostElPosition.right +\n                targetElement.offsetWidth >\n                window.innerWidth) {\n            return 'left';\n        }\n        return null;\n    };\n    Positioning.prototype.getAllStyles = function (element) {\n        return window.getComputedStyle(element);\n    };\n    Positioning.prototype.getStyle = function (element, prop) {\n        return this.getAllStyles(element)[prop];\n    };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl &&\n            offsetParentEl !== document.documentElement &&\n            this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    return Positioning;\n}());\nexport { Positioning };\nvar positionService = new Positioning();\nexport function positionElements(hostElement, targetElement, placement, appendToBody) {\n    var pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n    targetElement.style.top = pos.top + \"px\";\n    targetElement.style.left = pos.left + \"px\";\n}\n//# sourceMappingURL=ng-positioning.js.map"]}]}