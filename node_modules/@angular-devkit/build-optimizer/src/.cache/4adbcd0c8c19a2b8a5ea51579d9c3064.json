{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\alert\\alert.config.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\alert\\alert.config.js","mtime":1614055064821},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nvar AlertConfig = /*@__PURE__*/ (function () {\n    function AlertConfig() {\n        /** default alert type */\n        this.type = 'warning';\n        /** is alerts are dismissible by default */\n        this.dismissible = false;\n        /** default time before alert will dismiss */\n        this.dismissOnTimeout = undefined;\n    }\n    return AlertConfig;\n}());\nexport { AlertConfig };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\alert\\alert.config.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\alert\\alert.config.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,IAAI,WAAW,iBAAG,CAAC;IACf;QACI,yBAAyB;QACzB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,2CAA2C;QAC3C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,6CAA6C;QAC7C,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;IACtC,CAAC;IAMD,MAAM,CAAC,WAAW,CAAC;GACpB,CAAC,CAAC;AACL,OAAO,EAAE,WAAW,EAAE,CAAC;AACvB,wCAAwC","sourcesContent":["import { Injectable } from '@angular/core';\nvar AlertConfig = (function () {\n    function AlertConfig() {\n        /** default alert type */\n        this.type = 'warning';\n        /** is alerts are dismissible by default */\n        this.dismissible = false;\n        /** default time before alert will dismiss */\n        this.dismissOnTimeout = undefined;\n    }\n    AlertConfig.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    AlertConfig.ctorParameters = function () { return []; };\n    return AlertConfig;\n}());\nexport { AlertConfig };\n//# sourceMappingURL=alert.config.js.map"]}]}