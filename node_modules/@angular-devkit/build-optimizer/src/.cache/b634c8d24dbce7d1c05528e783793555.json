{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\progressbar\\bar.component.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\progressbar\\bar.component.js","mtime":1614055095913},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Host, HostBinding, Input } from '@angular/core';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from '../utils/theme-provider';\n// todo: number pipe\n// todo: use query from progress?\nvar BarComponent = /*@__PURE__*/ (function () {\n    function BarComponent(progress) {\n        this.percent = 0;\n        this.progress = progress;\n    }\n    Object.defineProperty(BarComponent.prototype, \"value\", {\n        /** current value of progress bar */\n        get: function () {\n            return this._value;\n        },\n        set: function (v) {\n            if (!v && v !== 0) {\n                return;\n            }\n            this._value = v;\n            this.recalculatePercentage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"setBarWidth\", {\n        get: function () {\n            this.recalculatePercentage();\n            return this.percent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarComponent.prototype.ngOnInit = function () {\n        this.progress.addBar(this);\n    };\n    BarComponent.prototype.ngOnDestroy = function () {\n        this.progress.removeBar(this);\n    };\n    BarComponent.prototype.recalculatePercentage = function () {\n        this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n        var totalPercentage = this.progress.bars\n            .reduce(function (total, bar) {\n            return total + bar.percent;\n        }, 0);\n        if (totalPercentage > 100) {\n            this.percent -= totalPercentage - 100;\n        }\n    };\n    return BarComponent;\n}());\nexport { BarComponent };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\progressbar\\bar.component.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\progressbar\\bar.component.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAC/D,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,oBAAoB;AACpB,iCAAiC;AACjC,IAAI,YAAY,iBAAG,CAAC;IAChB,sBAAsB,QAAQ;QAC1B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE;QACnD,oCAAoC;QACpC,GAAG,EAAE;YACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QACD,GAAG,EAAE,UAAU,CAAC;YACZ,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC;YACX,CAAC;YACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,EAAE,aAAa,EAAE;QACzD,GAAG,EAAE;YACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;IACH,MAAM,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE;QACnD,GAAG,EAAE;YACD,MAAM,CAAC,KAAK,EAAE,CAAC;QACnB,CAAC;QACD,UAAU,EAAE,IAAI;QAChB,YAAY,EAAE,IAAI;KACrB,CAAC,CAAC;IACH,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG;QAC9B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG;QACjC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;IACF,YAAY,CAAC,SAAS,CAAC,qBAAqB,GAAG;QAC3C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;aACnC,MAAM,CAAC,UAAU,KAAK,EAAE,GAAG;YAC5B,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;QAC/B,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,EAAE,CAAC,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,IAAI,eAAe,GAAG,GAAG,CAAC;QAC1C,CAAC;IACL,CAAC,CAAC;IA4BF,MAAM,CAAC,YAAY,CAAC;GACrB,CAAC,CAAC;AACL,OAAO,EAAE,YAAY,EAAE,CAAC;AACxB,yCAAyC","sourcesContent":["import { Component, Host, HostBinding, Input } from '@angular/core';\nimport { ProgressbarComponent } from './progressbar.component';\nimport { isBs3 } from '../utils/theme-provider';\n// todo: number pipe\n// todo: use query from progress?\nvar BarComponent = (function () {\n    function BarComponent(progress) {\n        this.percent = 0;\n        this.progress = progress;\n    }\n    Object.defineProperty(BarComponent.prototype, \"value\", {\n        /** current value of progress bar */\n        get: function () {\n            return this._value;\n        },\n        set: function (v) {\n            if (!v && v !== 0) {\n                return;\n            }\n            this._value = v;\n            this.recalculatePercentage();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"setBarWidth\", {\n        get: function () {\n            this.recalculatePercentage();\n            return this.percent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BarComponent.prototype, \"isBs3\", {\n        get: function () {\n            return isBs3();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BarComponent.prototype.ngOnInit = function () {\n        this.progress.addBar(this);\n    };\n    BarComponent.prototype.ngOnDestroy = function () {\n        this.progress.removeBar(this);\n    };\n    BarComponent.prototype.recalculatePercentage = function () {\n        this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n        var totalPercentage = this.progress.bars\n            .reduce(function (total, bar) {\n            return total + bar.percent;\n        }, 0);\n        if (totalPercentage > 100) {\n            this.percent -= totalPercentage - 100;\n        }\n    };\n    BarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'bar',\n                    template: \"<ng-content></ng-content> \",\n                    host: {\n                        role: 'progressbar',\n                        'aria-valuemin': '0',\n                        '[class]': '\"progress-bar \" + (type ? \"progress-bar-\" + type + \" bg-\" + type : \"\")',\n                        '[class.progress-bar-animated]': '!isBs3 && animate',\n                        '[class.progress-bar-striped]': 'striped',\n                        '[class.active]': 'isBs3 && animate',\n                        '[attr.aria-valuenow]': 'value',\n                        '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n                        '[attr.aria-valuemax]': 'max',\n                        '[style.height.%]': '\"100\"'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    BarComponent.ctorParameters = function () { return [\n        { type: ProgressbarComponent, decorators: [{ type: Host },] },\n    ]; };\n    BarComponent.propDecorators = {\n        'type': [{ type: Input },],\n        'value': [{ type: Input },],\n        'setBarWidth': [{ type: HostBinding, args: ['style.width.%',] },],\n    };\n    return BarComponent;\n}());\nexport { BarComponent };\n//# sourceMappingURL=bar.component.js.map"]}]}