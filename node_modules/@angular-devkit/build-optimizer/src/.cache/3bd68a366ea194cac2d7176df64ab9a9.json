{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\positioning.service.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\positioning.service.js","mtime":1614055095795},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\nvar PositioningService = /*@__PURE__*/ (function () {\n    function PositioningService() {\n    }\n    PositioningService.prototype.position = function (options) {\n        var element = options.element, target = options.target, attachment = options.attachment, appendToBody = options.appendToBody;\n        positionElements(_getHtmlElement(target), _getHtmlElement(element), attachment, appendToBody);\n    };\n    return PositioningService;\n}());\nexport { PositioningService };\nfunction _getHtmlElement(element) {\n    // it means that we got a selector\n    if (typeof element === 'string') {\n        return document.querySelector(element);\n    }\n    if (element instanceof ElementRef) {\n        return element.nativeElement;\n    }\n    return element;\n}\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\positioning.service.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\positioning\\positioning.service.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AACpD,IAAI,kBAAkB,iBAAG,CAAC;IACtB;IACA,CAAC;IACD,kBAAkB,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,OAAO;QACrD,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,UAAU,GAAG,OAAO,CAAC,UAAU,EAAE,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;QAC7H,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;IAClG,CAAC,CAAC;IAMF,MAAM,CAAC,kBAAkB,CAAC;GAC3B,CAAC,CAAC;AACL,OAAO,EAAE,kBAAkB,EAAE,CAAC;AAC9B,yBAAyB,OAAO;IAC5B,kCAAkC;IAClC,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,YAAY,UAAU,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;IACjC,CAAC;IACD,MAAM,CAAC,OAAO,CAAC;AACnB,CAAC;AACD,+CAA+C","sourcesContent":["import { Injectable, ElementRef } from '@angular/core';\nimport { positionElements } from './ng-positioning';\nvar PositioningService = (function () {\n    function PositioningService() {\n    }\n    PositioningService.prototype.position = function (options) {\n        var element = options.element, target = options.target, attachment = options.attachment, appendToBody = options.appendToBody;\n        positionElements(_getHtmlElement(target), _getHtmlElement(element), attachment, appendToBody);\n    };\n    PositioningService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PositioningService.ctorParameters = function () { return []; };\n    return PositioningService;\n}());\nexport { PositioningService };\nfunction _getHtmlElement(element) {\n    // it means that we got a selector\n    if (typeof element === 'string') {\n        return document.querySelector(element);\n    }\n    if (element instanceof ElementRef) {\n        return element.nativeElement;\n    }\n    return element;\n}\n//# sourceMappingURL=positioning.service.js.map"]}]}