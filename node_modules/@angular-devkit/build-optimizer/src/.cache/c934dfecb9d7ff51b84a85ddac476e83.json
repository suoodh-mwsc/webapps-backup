{"remainingRequest":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\sortable\\draggable-item.service.js","dependencies":[{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\sortable\\draggable-item.service.js","mtime":1614055096572},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1614055079483},{"path":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nvar DraggableItemService = /*@__PURE__*/ (function () {\n    function DraggableItemService() {\n        this.onCapture = new Subject();\n    }\n    DraggableItemService.prototype.dragStart = function (item) {\n        this.draggableItem = item;\n    };\n    DraggableItemService.prototype.getItem = function () {\n        return this.draggableItem;\n    };\n    DraggableItemService.prototype.captureItem = function (overZoneIndex, newIndex) {\n        if (this.draggableItem.overZoneIndex !== overZoneIndex) {\n            this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\n            this.draggableItem.overZoneIndex = overZoneIndex;\n            this.onCapture.next(this.draggableItem);\n            this.draggableItem = Object.assign({}, this.draggableItem, {\n                overZoneIndex: overZoneIndex,\n                i: newIndex\n            });\n        }\n        return this.draggableItem;\n    };\n    DraggableItemService.prototype.onCaptureItem = function () {\n        return this.onCapture;\n    };\n    return DraggableItemService;\n}());\nexport { DraggableItemService };\n\n\n\n",{"version":3,"file":"D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\sortable\\draggable-item.service.js.post-build-optimizer.js","sourceRoot":"","sources":["D:\\Code MWSC\\2020-MWSC-Github\\webapps\\node_modules\\ngx-bootstrap\\sortable\\draggable-item.service.js.pre-build-optimizer.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,IAAI,oBAAoB,iBAAG,CAAC;IACxB;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;IACnC,CAAC;IACD,oBAAoB,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,IAAI;QACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,CAAC,CAAC;IACF,oBAAoB,CAAC,SAAS,CAAC,OAAO,GAAG;QACrC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC,CAAC;IACF,oBAAoB,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,aAAa,EAAE,QAAQ;QAC1E,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YACpE,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;YACjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE;gBACvD,aAAa,EAAE,aAAa;gBAC5B,CAAC,EAAE,QAAQ;aACd,CAAC,CAAC;QACP,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC,CAAC;IACF,oBAAoB,CAAC,SAAS,CAAC,aAAa,GAAG;QAC3C,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC,CAAC;IAMF,MAAM,CAAC,oBAAoB,CAAC;GAC7B,CAAC,CAAC;AACL,OAAO,EAAE,oBAAoB,EAAE,CAAC;AAChC,kDAAkD","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nvar DraggableItemService = (function () {\n    function DraggableItemService() {\n        this.onCapture = new Subject();\n    }\n    DraggableItemService.prototype.dragStart = function (item) {\n        this.draggableItem = item;\n    };\n    DraggableItemService.prototype.getItem = function () {\n        return this.draggableItem;\n    };\n    DraggableItemService.prototype.captureItem = function (overZoneIndex, newIndex) {\n        if (this.draggableItem.overZoneIndex !== overZoneIndex) {\n            this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\n            this.draggableItem.overZoneIndex = overZoneIndex;\n            this.onCapture.next(this.draggableItem);\n            this.draggableItem = Object.assign({}, this.draggableItem, {\n                overZoneIndex: overZoneIndex,\n                i: newIndex\n            });\n        }\n        return this.draggableItem;\n    };\n    DraggableItemService.prototype.onCaptureItem = function () {\n        return this.onCapture;\n    };\n    DraggableItemService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    DraggableItemService.ctorParameters = function () { return []; };\n    return DraggableItemService;\n}());\nexport { DraggableItemService };\n//# sourceMappingURL=draggable-item.service.js.map"]}]}